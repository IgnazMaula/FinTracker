@inject HttpClient Http

<SfChart Title="Market Overview: BTC-USD">
    <ChartPrimaryXAxis Title="Date"
                       ValueType="Syncfusion.Blazor.Charts.ValueType.Category"
                       LabelRotation="45">
    </ChartPrimaryXAxis>

    <ChartPrimaryYAxis Title="Price (USD)"
                       ValueType="Syncfusion.Blazor.Charts.ValueType.Double"
                       LabelFormat="${value}" />

    <ChartTooltipSettings Enable="true" />

    <ChartSeriesCollection>
        <ChartSeries DataSource="@stockPrices"
                     XName="Timestamp"
                     High="High"
                     Low="Low"
                     Open="Open"
                     Close="Close"
                     Name="BTC"
                     Type="ChartSeriesType.Candle">
        </ChartSeries>
    </ChartSeriesCollection>
</SfChart>

@code {
    private List<StockPrice> stockPrices = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadChartData();
    }

    private async Task LoadChartData()
    {
        var url = $"https://api.coingecko.com/api/v3/coins/bitcoin/ohlc?vs_currency=usd&days=7";
        var response = await Http.GetFromJsonAsync<List<List<double>>>(url);

        if (response != null)
        {
            stockPrices = response.Take(30).Select(p => new StockPrice
            {
                Timestamp = DateTimeOffset.FromUnixTimeMilliseconds((long)p[0])
                            .ToLocalTime()
                            .ToString("MM-dd HH:mm"),
                Open = (decimal)p[1],
                High = (decimal)p[2],
                Low = (decimal)p[3],
                Close = (decimal)p[4]
            }).ToList();
        }
    }

    public class StockPrice
    {
        public string Timestamp { get; set; } = string.Empty;
        public decimal Open { get; set; }
        public decimal High { get; set; }
        public decimal Low { get; set; }
        public decimal Close { get; set; }
    }
}